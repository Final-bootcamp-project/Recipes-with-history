{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\"; //every state contains of three things: name, initialState(object/array), reducers (anonymous function)\n\nexport const users = createSlice({\n  name: 'users',\n  initialState: {\n    userId: null,\n    username: null,\n    email: null,\n    accessToken: null\n  },\n  reducers: {\n    //this is built as an object, so we construct its properties, inside\n    addUser: (store, action) => {\n      //we need to pass data about \"what to do\"\n      store.items = [...store.items, action.payload]; // this makes it immutable, by making a new array\n    },\n    editUSer: (store, action) => {\n      store.items = action.payload;\n    },\n    deleteUser: (store, action) => {\n      store.items.splice(action.payload, 1);\n    }\n  }\n});","map":{"version":3,"sources":["C:/Users/jessi/OneDrive/Dokument/Technigo/Finalproject/my-app/frontend/src/reducers/users.js"],"names":["createSlice","users","name","initialState","userId","username","email","accessToken","reducers","addUser","store","action","items","payload","editUSer","deleteUser","splice"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B,C,CAEA;;AACA,OAAO,MAAMC,KAAK,GAAGD,WAAW,CAAE;AAC9BE,EAAAA,IAAI,EAAE,OADwB;AAE9BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,MAAM,EAAE,IADI;AAEZC,IAAAA,QAAQ,EAAE,IAFE;AAGZC,IAAAA,KAAK,EAAE,IAHK;AAIZC,IAAAA,WAAW,EAAE;AAJD,GAFgB;AAQ9BC,EAAAA,QAAQ,EAAE;AAAC;AACPC,IAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAAC;AAC3BD,MAAAA,KAAK,CAACE,KAAN,GAAc,CAAC,GAAGF,KAAK,CAACE,KAAV,EAAiBD,MAAM,CAACE,OAAxB,CAAd,CAD0B,CACsB;AACjD,KAHK;AAINC,IAAAA,QAAQ,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAC3BD,MAAAA,KAAK,CAACE,KAAN,GAAcD,MAAM,CAACE,OAArB;AACD,KANK;AAONE,IAAAA,UAAU,EAAE,CAACL,KAAD,EAAQC,MAAR,KAAmB;AAC7BD,MAAAA,KAAK,CAACE,KAAN,CAAYI,MAAZ,CAAmBL,MAAM,CAACE,OAA1B,EAAmC,CAAnC;AACD;AATK;AARoB,CAAF,CAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n//every state contains of three things: name, initialState(object/array), reducers (anonymous function)\r\nexport const users = createSlice ({\r\n    name: 'users',\r\n    initialState: {\r\n      userId: null,\r\n      username: null,\r\n      email: null,\r\n      accessToken: null,\r\n    },\r\n    reducers: {//this is built as an object, so we construct its properties, inside\r\n        addUser: (store, action) => {//we need to pass data about \"what to do\"\r\n          store.items = [...store.items, action.payload]; // this makes it immutable, by making a new array\r\n        },\r\n        editUSer: (store, action) => {\r\n          store.items = action.payload;\r\n        },\r\n        deleteUser: (store, action) => {\r\n          store.items.splice(action.payload, 1);\r\n        },\r\n    },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}